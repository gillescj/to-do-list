{"version":3,"sources":["components/AddTaskBar.js","components/TaskItem.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTaskBar","state","taskTerm","onInputChange","event","setState","target","value","onAddTaskButtonClick","props","onEnterClick","key","className","this","onChange","onKeyDown","type","onClick","React","Component","TaskItem","task","onTaskItemClick","TaskList","tasks","renderedTaskList","map","App","find","el","newTasks","filter","ReactDOM","render","document","querySelector"],"mappings":"6UAqCeA,G,uNAjCXC,MAAQ,CAAEC,SAAU,I,EAEpBC,cAAgB,SAAAC,GACZ,EAAKC,SAAS,CAAEH,SAAUE,EAAME,OAAOC,S,EAG3CC,qBAAuB,WACnB,EAAKC,MAAMD,qBAAqB,EAAKP,MAAMC,UAC3C,EAAKG,SAAS,CAAEH,SAAU,M,EAG9BQ,aAAe,SAAAN,GACO,UAAdA,EAAMO,MACN,EAAKF,MAAMD,qBAAqB,EAAKP,MAAMC,UAC3C,EAAKG,SAAS,CAAEH,SAAU,O,wEAK9B,OACI,yBAAKU,UAAU,gBACX,2BACIL,MAAOM,KAAKZ,MAAMC,SAClBY,SAAUD,KAAKV,cACfY,UAAWF,KAAKH,aAChBM,KAAK,SAET,4BAAQC,QAASJ,KAAKL,sBAAtB,Y,GA5BSU,IAAMC,YCShBC,G,YARE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBACtB,OACI,yBAAKL,QAAS,kBAAMK,EAAgBD,IAAOT,UAAU,aAChDS,KCOEE,EATE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOF,EAAsB,EAAtBA,gBACvB,GAAKE,EAAL,CACA,IAAMC,EAAmBD,EAAME,KAAI,SAAAL,GAC/B,OAAO,kBAAC,EAAD,CAAUC,gBAAiBA,EAAiBX,IAAKU,EAAMA,KAAMA,OAGxE,OAAO,yBAAKT,UAAU,aAAaa,KCuBxBE,E,2MA3BX1B,MAAQ,CAAEuB,MAAO,I,EAEjBhB,qBAAuB,SAAAN,GACdA,IACD,EAAKD,MAAMuB,MAAMI,MAAK,SAAAC,GAAE,OAAIA,IAAO3B,MACvC,EAAKG,SAAS,CAAEmB,MAAM,GAAD,mBAAM,EAAKvB,MAAMuB,OAAjB,CAAwBtB,Q,EAGjDoB,gBAAkB,SAAAD,GACd,IAAMS,EAAW,EAAK7B,MAAMuB,MAAMO,QAAO,SAAAF,GAAE,OAAIA,IAAOR,KAEtD,EAAKhB,SAAS,CAAEmB,MAAOM,K,wEAIvB,OACI,yBAAKlB,UAAU,aACX,kBAAC,EAAD,CAAYJ,qBAAsBK,KAAKL,uBACvC,kBAAC,EAAD,CACIgB,MAAOX,KAAKZ,MAAMuB,MAClBF,gBAAiBT,KAAKS,uB,GArBxBJ,IAAMC,WCAxBa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.ee6bbade.chunk.js","sourcesContent":["import '../styles/AddTaskBar.scss';\r\nimport React from 'react';\r\n\r\nclass AddTaskBar extends React.Component {\r\n    state = { taskTerm: '' };\r\n\r\n    onInputChange = event => {\r\n        this.setState({ taskTerm: event.target.value });\r\n    };\r\n\r\n    onAddTaskButtonClick = () => {\r\n        this.props.onAddTaskButtonClick(this.state.taskTerm);\r\n        this.setState({ taskTerm: '' });\r\n    };\r\n\r\n    onEnterClick = event => {\r\n        if (event.key === 'Enter') {\r\n            this.props.onAddTaskButtonClick(this.state.taskTerm);\r\n            this.setState({ taskTerm: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-task-bar\">\r\n                <input\r\n                    value={this.state.taskTerm}\r\n                    onChange={this.onInputChange}\r\n                    onKeyDown={this.onEnterClick}\r\n                    type=\"text\"\r\n                />\r\n                <button onClick={this.onAddTaskButtonClick}>Add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTaskBar;\r\n","import '../styles/TaskItem.scss';\r\n\r\nimport React from 'react';\r\n\r\nconst TaskItem = ({ task, onTaskItemClick }) => {\r\n    return (\r\n        <div onClick={() => onTaskItemClick(task)} className=\"task-item\">\r\n            {task}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskItem;\r\n","import '../styles/TaskList.scss';\r\n\r\nimport React from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nconst TaskList = ({ tasks, onTaskItemClick }) => {\r\n    if (!tasks) return;\r\n    const renderedTaskList = tasks.map(task => {\r\n        return <TaskItem onTaskItemClick={onTaskItemClick} key={task} task={task} />;\r\n    });\r\n\r\n    return <div className=\"task-list\">{renderedTaskList}</div>;\r\n};\r\n\r\nexport default TaskList;\r\n","import '../styles/App.scss';\r\n\r\nimport React from 'react';\r\nimport AddTaskBar from './AddTaskBar';\r\nimport TaskList from './TaskList';\r\n\r\nclass App extends React.Component {\r\n    state = { tasks: [] };\r\n\r\n    onAddTaskButtonClick = taskTerm => {\r\n        if (!taskTerm) return;\r\n        if (this.state.tasks.find(el => el === taskTerm)) return;\r\n        this.setState({ tasks: [...this.state.tasks, taskTerm] });\r\n    };\r\n\r\n    onTaskItemClick = task => {\r\n        const newTasks = this.state.tasks.filter(el => el !== task);\r\n\r\n        this.setState({ tasks: newTasks });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <AddTaskBar onAddTaskButtonClick={this.onAddTaskButtonClick} />\r\n                <TaskList\r\n                    tasks={this.state.tasks}\r\n                    onTaskItemClick={this.onTaskItemClick}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import './styles/base.scss';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}